 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер
 git clone https://github.com/makevkin/JSON.git

 6. Внутри локального JSON создать файл “new.json”
 > new.json

 7. Добавить файл под гит.
 git add new.json

 8. Закоммитить файл.
 git commit -m "new fail"

 9. Отправить файл на внешний GitHub репозиторий.
 git push

 10. Отредактировать содержание файла “new.json” - написать информацию 
 о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
 Всё написать в формате JSON.
 cat >> new.json
 {

	"Name":"Юрий",
	"Second name": "Макевкин",
	"Age": "46",
	"Number of pets": "3",
	"Future desired salary": "1000-1500$"
} 

 11. Отправить изменения на внешний репозиторий.
 git commit -a -m "new_1"
 git push

 12. Создать файл preferences.json
 > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 cat >> preferences.json
 {
        "Favorite movie": "The Fast and the Furious",
	"Favotite TV series": "None",
	"Favorite food": "dumplings",
	"Favorite season": "summer",
	"The country to visit": "Singapore"
 }

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 cat > skills.json
 {
	"skills": "Terminal, Git, Postman, Dev Tools, SQL, XCode, Jmeter, Testing"
 }
 
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "add 2 file"
 git push

 16. На веб интерфейсе создать файл bug_report.json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull

 21. Создать внешний репозиторий c названием XML.

 22. Клонировать репозиторий XML на локальный компьютер.
 git clone https://github.com/makevkin/XML.git

 23. Внутри локального XML создать файл “new.xml”.
 > new.xml

 24. Добавить файл под гит.
 git add new.xml

 25. Закоммитить файл.
 git commit -m "new file"

 26. Отправить файл на внешний GitHub репозиторий.
 git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 cat >> new.xml
 <?xml version="1.0" encoding="UTF-8"?>
     <body>
  	<name>Juriy</name>
  	<surname>Makevkin</surname>
  	<age>46</age>
  	<pets>3</pets>
  	<desired_salary>1500$</desired_salary>
     </body>

 28. Отправить изменения на внешний репозиторий.
 git commit -a -m "add info"
 git push

 29. Создать файл preferences.xml
 > preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 cat >> preferences.xml
 <?xml version="1.0" encoding="UTF-8"?>
      <body>
  	<fav_movie>The Fast and the Furious</fav_moviee>
  	<fav_TVshow>None</fav_TV_show>
  	<fav_food>Dumplings</fav_food>
  	<fav_season>Summer</fav_season>
  	<country_to_visit>Singapore</country_to_visit>
      </body>

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 cat >> skills.xml
 <?xml version="1.0" encoding="UTF-8"?>
    <body>
	<skill_1>Terminal</skill_1>
	<skill_2>Git</skill_2>
	<skill_3>Postman</skill_3>
	<skill_4>Dev Tools</skill_4>
	<skill_5>SQL</skill_5>
	<skill_6>XCode</skill_6>
	<skill_7>Jmetr</skill_7>
	<skill_8>Testing</skill_8>
    </body>

 32. Сделать коммит в одну строку.
 git add . && git commit -am "comment"

 33. Отправить сразу 2 файла на внешний репозиторий.
 git push

 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
 git pull


 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 git clone https://github.com/makevkin/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
 > new.txt

 4. Добавить файл под гит.
 git add new.txt

 5. Закоммитить файл.
 git commit -m "new"

 6. Отправить файл на внешний GitHub репозиторий.
 git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 cat >> new.txt
 name Yuriy
 surname Makevkin
 age 46
 pets 3
 desired salary 1500$

 8. Отправить изменения на внешний репозиторий.
 git commit -am "new1"
 git push
 
 9. Создать файл preferences.txt
 > preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 cat >> preferences.txt
 favorit move - The Fast and Furious
 favorit TV show - none
 favorit food - Dumplings
 favorit season - Summer
 country to visit - Singapore

 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 cat > skills.txt
 skills: Terminal, Git, Postman, Dev Tools, SQL, XCode, Jmeter, Testing
 
 12. Сделать коммит в одну строку.
 git add . && git commit -am "comment"

 13. Отправить сразу 2 файла на внешний репозиторий.
 git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull

